# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CUDA CMake Multi-Platform Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            cuda: '12.1.1'
          - os: windows-latest
            cuda: '12.1.1'
    steps:
    - name: CUDA image for actions
      uses: Jimver/cuda-toolkit@v0.2.15

    # - name: Set up CUDA
    #   if: matrix.os == 'ubuntu-latest'
    #   run: |
    #     wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb
    #     sudo dpkg -i cuda-keyring_1.0-1_all.deb
    #     sudo apt-get update
    #     sudo apt-get -y install cuda
    #   shell: bash

    # - name: Set up CUDA on Windows
    #   if: matrix.os == 'windows-latest'
    #   run: |
    #       Invoke-WebRequest https://raw.githubusercontent.com/KonduitAI/cuda-install/master/.github/actions/install-cuda-windows/install_cuda_windows.ps1 -OutFile install_cuda_windows.ps1 | Out-Null
    #       .\install_cuda_windows.ps1
    #       echo "CUDA_PATH=$($CUDA_PATH))" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    #       echo "$($CUDA_PATH))\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    #   shell: powershell

    # - name: Add CUDA to PATH on Ubuntu
    #   if: matrix.os == 'ubuntu-latest'
    #   run: echo "/usr/local/cuda-${{ matrix.cuda }}/bin" >> $GITHUB_PATH
    #   shell: bash

    - name: Configure CMake
      run: mkdir build && cd build && cmake ..
      shell: bash

    - name: Build with CMake
      run: cmake --build build --config Release
      shell: bash

